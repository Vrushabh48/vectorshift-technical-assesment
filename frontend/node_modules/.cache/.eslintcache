[{"C:\\Users\\Vrushabh\\OneDrive\\Documents\\GitHub\\vectorshift-technical-assesment\\frontend\\src\\index.js":"1","C:\\Users\\Vrushabh\\OneDrive\\Documents\\GitHub\\vectorshift-technical-assesment\\frontend\\src\\App.js":"2","C:\\Users\\Vrushabh\\OneDrive\\Documents\\GitHub\\vectorshift-technical-assesment\\frontend\\src\\ui.js":"3","C:\\Users\\Vrushabh\\OneDrive\\Documents\\GitHub\\vectorshift-technical-assesment\\frontend\\src\\submit.js":"4","C:\\Users\\Vrushabh\\OneDrive\\Documents\\GitHub\\vectorshift-technical-assesment\\frontend\\src\\toolbar.js":"5","C:\\Users\\Vrushabh\\OneDrive\\Documents\\GitHub\\vectorshift-technical-assesment\\frontend\\src\\store.js":"6","C:\\Users\\Vrushabh\\OneDrive\\Documents\\GitHub\\vectorshift-technical-assesment\\frontend\\src\\draggableNode.js":"7","C:\\Users\\Vrushabh\\OneDrive\\Documents\\GitHub\\vectorshift-technical-assesment\\frontend\\src\\nodes\\outputNode.js":"8","C:\\Users\\Vrushabh\\OneDrive\\Documents\\GitHub\\vectorshift-technical-assesment\\frontend\\src\\nodes\\inputNode.js":"9","C:\\Users\\Vrushabh\\OneDrive\\Documents\\GitHub\\vectorshift-technical-assesment\\frontend\\src\\nodes\\llmNode.js":"10","C:\\Users\\Vrushabh\\OneDrive\\Documents\\GitHub\\vectorshift-technical-assesment\\frontend\\src\\nodes\\textNode.js":"11","C:\\Users\\Vrushabh\\OneDrive\\Documents\\GitHub\\vectorshift-technical-assesment\\frontend\\src\\nodes\\BaseNode.js":"12","C:\\Users\\Vrushabh\\OneDrive\\Documents\\GitHub\\vectorshift-technical-assesment\\frontend\\src\\nodes\\styles.js":"13","C:\\Users\\Vrushabh\\OneDrive\\Documents\\GitHub\\vectorshift-technical-assesment\\frontend\\src\\nodeEdgeCounts.js":"14"},{"size":265,"mtime":1725056227684,"results":"15","hashOfConfig":"16"},{"size":296,"mtime":1725104570447,"results":"17","hashOfConfig":"16"},{"size":4380,"mtime":1725133007243,"results":"18","hashOfConfig":"16"},{"size":1717,"mtime":1725132852713,"results":"19","hashOfConfig":"16"},{"size":753,"mtime":1725130245625,"results":"20","hashOfConfig":"16"},{"size":1770,"mtime":1725096285295,"results":"21","hashOfConfig":"16"},{"size":1811,"mtime":1725130391821,"results":"22","hashOfConfig":"16"},{"size":1638,"mtime":1725100057558,"results":"23","hashOfConfig":"16"},{"size":1819,"mtime":1725106647964,"results":"24","hashOfConfig":"16"},{"size":843,"mtime":1725104325884,"results":"25","hashOfConfig":"16"},{"size":3367,"mtime":1725129063048,"results":"26","hashOfConfig":"16"},{"size":876,"mtime":1725105439931,"results":"27","hashOfConfig":"16"},{"size":16,"mtime":1725111700679,"results":"28","hashOfConfig":"16"},{"size":1274,"mtime":1725097561183,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"14w3577",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"33"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"33"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"C:\\Users\\Vrushabh\\OneDrive\\Documents\\GitHub\\vectorshift-technical-assesment\\frontend\\src\\index.js",[],[],[],"C:\\Users\\Vrushabh\\OneDrive\\Documents\\GitHub\\vectorshift-technical-assesment\\frontend\\src\\App.js",[],[],"C:\\Users\\Vrushabh\\OneDrive\\Documents\\GitHub\\vectorshift-technical-assesment\\frontend\\src\\ui.js",["75"],[],"C:\\Users\\Vrushabh\\OneDrive\\Documents\\GitHub\\vectorshift-technical-assesment\\frontend\\src\\submit.js",[],[],"C:\\Users\\Vrushabh\\OneDrive\\Documents\\GitHub\\vectorshift-technical-assesment\\frontend\\src\\toolbar.js",["76","77","78"],[],"C:\\Users\\Vrushabh\\OneDrive\\Documents\\GitHub\\vectorshift-technical-assesment\\frontend\\src\\store.js",[],[],"C:\\Users\\Vrushabh\\OneDrive\\Documents\\GitHub\\vectorshift-technical-assesment\\frontend\\src\\draggableNode.js",[],[],"C:\\Users\\Vrushabh\\OneDrive\\Documents\\GitHub\\vectorshift-technical-assesment\\frontend\\src\\nodes\\outputNode.js",[],[],"C:\\Users\\Vrushabh\\OneDrive\\Documents\\GitHub\\vectorshift-technical-assesment\\frontend\\src\\nodes\\inputNode.js",[],[],"C:\\Users\\Vrushabh\\OneDrive\\Documents\\GitHub\\vectorshift-technical-assesment\\frontend\\src\\nodes\\llmNode.js",[],[],"C:\\Users\\Vrushabh\\OneDrive\\Documents\\GitHub\\vectorshift-technical-assesment\\frontend\\src\\nodes\\textNode.js",["79","80"],[],"import React, { useState, useEffect, useRef } from 'react';\r\nimport BaseNode from './BaseNode';\r\n\r\nexport const TextNode = ({ id, data }) => {\r\n  const [currText, setCurrText] = useState(data?.text || '{{input}}');\r\n  const [dimensions, setDimensions] = useState({ width: 200, height: 80 });\r\n  const [handles, setHandles] = useState([]);\r\n  const textareaRef = useRef(null);\r\n\r\n  const calculateDimensions = (text) => {\r\n    if (!textareaRef.current) return { width: 200, height: 80 };\r\n    const charWidth = getCharWidth();\r\n    const maxLineLength = Math.max(...text.split('\\n').map(line => line.length));\r\n    return { width: Math.max(200, maxLineLength * charWidth + 20), height: 'auto' };\r\n  };\r\n\r\n  const getCharWidth = () => {\r\n    const tempSpan = document.createElement('span');\r\n    tempSpan.style.visibility = 'hidden';\r\n    tempSpan.style.whiteSpace = 'pre';\r\n    tempSpan.textContent = 'M';\r\n    document.body.appendChild(tempSpan);\r\n    const charWidth = tempSpan.offsetWidth;\r\n    document.body.removeChild(tempSpan);\r\n    return charWidth;\r\n  };\r\n\r\n  const extractVariables = (text) => {\r\n    const regex = /\\{\\{\\s*([a-zA-Z_$][a-zA-Z_$0-9])\\s\\}\\}/g;\r\n    const variables = [];\r\n    let match;\r\n    while ((match = regex.exec(text)) !== null) {\r\n      variables.push(match[1]);\r\n    }\r\n    return variables;\r\n  };\r\n\r\n  const handleTextChange = (e) => {\r\n    const newText = e.target.value;\r\n    setCurrText(newText);\r\n    setDimensions(calculateDimensions(newText));\r\n    setHandles(createHandlesForVariables(newText));\r\n  };\r\n\r\n  const createHandlesForVariables = (text) => {\r\n    const variables = extractVariables(text);\r\n    return variables.map(variable => ({\r\n      type: 'target',\r\n      position: 'Left',\r\n      id: variable,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (textareaRef.current) {\r\n      // Reset the height to 'auto' to calculate the new scroll height\r\n      textareaRef.current.style.height = 'auto';\r\n      // Set the height based on the scrollHeight\r\n      textareaRef.current.style.height = `${textareaRef.current.scrollHeight}px`;\r\n    }\r\n    // Assuming createHandlesForVariables is a function to create handles based on currText\r\n    setHandles(createHandlesForVariables(currText));\r\n  }, [currText]);\r\n\r\n\r\n  useEffect(() => {\r\n    setDimensions(calculateDimensions(currText));\r\n  }, [dimensions.width]);\r\n\r\n  return (\r\n    <BaseNode\r\n      id={id}\r\n      handles={[\r\n        ...handles,\r\n        { type: 'source', position: 'Right', id: 'output' },\r\n      ]}\r\n      label=\"Text Node\"\r\n      content={\r\n        <textarea\r\n          ref={textareaRef}\r\n          value={currText}\r\n          onChange={(e) => {\r\n            handleTextChange(e);\r\n            // Dynamically adjust the height based on the content\r\n            textareaRef.current.style.height = 'auto'; // Reset height\r\n            textareaRef.current.style.height = `${textareaRef.current.scrollHeight}px`; // Set height based on scrollHeight\r\n          }}\r\n          style={{\r\n            width: dimensions.width - 20,\r\n            height: textareaRef.current?.scrollHeight || 80,\r\n            overflow: 'hidden'\r\n          }}\r\n        />\r\n      }\r\n      style={{\r\n        width: dimensions.width,\r\n        height: Math.max(textareaRef.current?.scrollHeight + 40 || 120, dimensions.height),\r\n        border: '1px solid black'\r\n      }}\r\n    />\r\n\r\n  );\r\n};","C:\\Users\\Vrushabh\\OneDrive\\Documents\\GitHub\\vectorshift-technical-assesment\\frontend\\src\\nodes\\BaseNode.js",["81"],[],"//BaseNode.js\r\n\r\nimport React from 'react';\r\nimport { Handle, Position } from 'reactflow';\r\nimport { nodeStyle } from './styles'; \r\n\r\nconst BaseNode = ({ id, handles, label, content, inputs, style = {} }) => {\r\n  const combinedStyle = { ...nodeStyle, ...style };\r\n\r\n  return (\r\n    <div className={`relative w-full max-w-xs p-4 border border-gray-300 rounded-lg shadow-sm ${combinedStyle}`}>\r\n  {handles.map((handle, index) => (\r\n    <Handle\r\n      key={index}\r\n      type={handle.type}\r\n      position={handle.position}\r\n      id={`${id}-${handle.id}`}\r\n      style={handle.style}\r\n      className=\"absolute\"\r\n    />\r\n  ))}\r\n  <div className=\"mb-2\">\r\n    <span className=\"text-lg font-semibold\">{label}</span>\r\n  </div>\r\n  <div className=\"text-sm text-gray-600\">{content}</div>\r\n  {inputs && <div className=\"mt-4\">{inputs}</div>}\r\n</div>\r\n  );\r\n};\r\n\r\nexport default BaseNode;","C:\\Users\\Vrushabh\\OneDrive\\Documents\\GitHub\\vectorshift-technical-assesment\\frontend\\src\\nodes\\styles.js",[],[],"C:\\Users\\Vrushabh\\OneDrive\\Documents\\GitHub\\vectorshift-technical-assesment\\frontend\\src\\nodeEdgeCounts.js",[],[],{"ruleId":"82","severity":1,"message":"83","line":88,"column":5,"nodeType":"84","endLine":88,"endColumn":24,"suggestions":"85"},{"ruleId":"86","severity":1,"message":"87","line":1,"column":35,"nodeType":"88","messageId":"89","endLine":1,"endColumn":41},{"ruleId":"86","severity":1,"message":"90","line":1,"column":57,"nodeType":"88","messageId":"89","endLine":1,"endColumn":63},{"ruleId":"86","severity":1,"message":"91","line":1,"column":65,"nodeType":"88","messageId":"89","endLine":1,"endColumn":77},{"ruleId":"82","severity":1,"message":"92","line":63,"column":6,"nodeType":"84","endLine":63,"endColumn":16,"suggestions":"93"},{"ruleId":"82","severity":1,"message":"94","line":68,"column":6,"nodeType":"84","endLine":68,"endColumn":24,"suggestions":"95"},{"ruleId":"86","severity":1,"message":"96","line":4,"column":18,"nodeType":"88","messageId":"89","endLine":4,"endColumn":26},"react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'addNode' and 'getNodeID'. Either include them or remove the dependency array.","ArrayExpression",["97"],"no-unused-vars","'faPlay' is defined but never used.","Identifier","unusedVar","'faSave' is defined but never used.","'faStickyNote' is defined but never used.","React Hook useEffect has a missing dependency: 'createHandlesForVariables'. Either include it or remove the dependency array.",["98"],"React Hook useEffect has missing dependencies: 'calculateDimensions' and 'currText'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setDimensions' needs the current value of 'currText'.",["99"],"'Position' is defined but never used.",{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},"Update the dependencies array to be: [addNode, getNodeID, reactFlowInstance]",{"range":"106","text":"107"},"Update the dependencies array to be: [createHandlesForVariables, currText]",{"range":"108","text":"109"},"Update the dependencies array to be: [calculateDimensions, currText, dimensions.width]",{"range":"110","text":"111"},[2553,2572],"[addNode, getNodeID, reactFlowInstance]",[2237,2247],"[createHandlesForVariables, currText]",[2332,2350],"[calculateDimensions, currText, dimensions.width]"]