{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vrushabh\\\\OneDrive\\\\Documents\\\\GitHub\\\\vectorshift-technical-assesment\\\\frontend\\\\src\\\\draggableNode.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// draggableNode.js\n\nexport const DraggableNode = ({\n  type,\n  label\n}) => {\n  const onDragStart = (event, nodeType) => {\n    const appData = {\n      nodeType\n    };\n    event.target.style.cursor = 'grabbing';\n    event.dataTransfer.setData('application/reactflow', JSON.stringify(appData));\n    event.dataTransfer.effectAllowed = 'move';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: type,\n    onDragStart: event => onDragStart(event, type),\n    onDragEnd: event => event.target.style.cursor = 'grab',\n    style: {\n      cursor: 'grab',\n      minWidth: '80px',\n      height: '60px',\n      display: 'flex',\n      alignItems: 'center',\n      borderRadius: '8px',\n      backgroundColor: '#4F46E5',\n      // Soft blue/purple tone\n      justifyContent: 'center',\n      flexDirection: 'column',\n      boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n      // Soft shadow for depth\n      transition: 'background-color 0.3s ease, transform 0.2s ease' // Smooth transitions\n    },\n\n    draggable: true,\n    onMouseOver: e => e.currentTarget.style.backgroundColor = '#6366F1' // Lighter on hover\n    ,\n    onMouseOut: e => e.currentTarget.style.backgroundColor = '#4F46E5' // Revert on leave\n    ,\n    onMouseDown: e => e.currentTarget.style.transform = 'scale(0.95)' // Shrink on click\n    ,\n    onMouseUp: e => e.currentTarget.style.transform = 'scale(1)' // Reset scale on release\n    ,\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: '#fff',\n        fontSize: '14px',\n        fontWeight: '600'\n      },\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }, this);\n};\n_c = DraggableNode;\nvar _c;\n$RefreshReg$(_c, \"DraggableNode\");","map":{"version":3,"names":["DraggableNode","type","label","onDragStart","event","nodeType","appData","target","style","cursor","dataTransfer","setData","JSON","stringify","effectAllowed","_jsxDEV","className","onDragEnd","minWidth","height","display","alignItems","borderRadius","backgroundColor","justifyContent","flexDirection","boxShadow","transition","draggable","onMouseOver","e","currentTarget","onMouseOut","onMouseDown","transform","onMouseUp","children","color","fontSize","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Vrushabh/OneDrive/Documents/GitHub/vectorshift-technical-assesment/frontend/src/draggableNode.js"],"sourcesContent":["// draggableNode.js\r\n\r\nexport const DraggableNode = ({ type, label }) => {\r\n    const onDragStart = (event, nodeType) => {\r\n      const appData = { nodeType }\r\n      event.target.style.cursor = 'grabbing';\r\n      event.dataTransfer.setData('application/reactflow', JSON.stringify(appData));\r\n      event.dataTransfer.effectAllowed = 'move';\r\n    };\r\n  \r\n    return (\r\n      <div\r\n  className={type}\r\n  onDragStart={(event) => onDragStart(event, type)}\r\n  onDragEnd={(event) => (event.target.style.cursor = 'grab')}\r\n  style={{ \r\n    cursor: 'grab', \r\n    minWidth: '80px', \r\n    height: '60px',\r\n    display: 'flex', \r\n    alignItems: 'center', \r\n    borderRadius: '8px',\r\n    backgroundColor: '#4F46E5',  // Soft blue/purple tone\r\n    justifyContent: 'center', \r\n    flexDirection: 'column',\r\n    boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',  // Soft shadow for depth\r\n    transition: 'background-color 0.3s ease, transform 0.2s ease', // Smooth transitions\r\n  }} \r\n  draggable\r\n  onMouseOver={(e) => e.currentTarget.style.backgroundColor = '#6366F1'}  // Lighter on hover\r\n  onMouseOut={(e) => e.currentTarget.style.backgroundColor = '#4F46E5'}  // Revert on leave\r\n  onMouseDown={(e) => e.currentTarget.style.transform = 'scale(0.95)'}  // Shrink on click\r\n  onMouseUp={(e) => e.currentTarget.style.transform = 'scale(1)'}  // Reset scale on release\r\n>\r\n  <span style={{ color: '#fff', fontSize: '14px', fontWeight: '600' }}>{label}</span>\r\n</div>\r\n\r\n    );\r\n  };\r\n  "],"mappings":";;AAAA;;AAEA,OAAO,MAAMA,aAAa,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAM,CAAC,KAAK;EAC9C,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IACvC,MAAMC,OAAO,GAAG;MAAED;IAAS,CAAC;IAC5BD,KAAK,CAACG,MAAM,CAACC,KAAK,CAACC,MAAM,GAAG,UAAU;IACtCL,KAAK,CAACM,YAAY,CAACC,OAAO,CAAC,uBAAuB,EAAEC,IAAI,CAACC,SAAS,CAACP,OAAO,CAAC,CAAC;IAC5EF,KAAK,CAACM,YAAY,CAACI,aAAa,GAAG,MAAM;EAC3C,CAAC;EAED,oBACEC,OAAA;IACJC,SAAS,EAAEf,IAAK;IAChBE,WAAW,EAAGC,KAAK,IAAKD,WAAW,CAACC,KAAK,EAAEH,IAAI,CAAE;IACjDgB,SAAS,EAAGb,KAAK,IAAMA,KAAK,CAACG,MAAM,CAACC,KAAK,CAACC,MAAM,GAAG,MAAQ;IAC3DD,KAAK,EAAE;MACLC,MAAM,EAAE,MAAM;MACdS,QAAQ,EAAE,MAAM;MAChBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE,MAAM;MACfC,UAAU,EAAE,QAAQ;MACpBC,YAAY,EAAE,KAAK;MACnBC,eAAe,EAAE,SAAS;MAAG;MAC7BC,cAAc,EAAE,QAAQ;MACxBC,aAAa,EAAE,QAAQ;MACvBC,SAAS,EAAE,8BAA8B;MAAG;MAC5CC,UAAU,EAAE,iDAAiD,CAAE;IACjE,CAAE;;IACFC,SAAS;IACTC,WAAW,EAAGC,CAAC,IAAKA,CAAC,CAACC,aAAa,CAACvB,KAAK,CAACe,eAAe,GAAG,SAAU,CAAE;IAAA;IACxES,UAAU,EAAGF,CAAC,IAAKA,CAAC,CAACC,aAAa,CAACvB,KAAK,CAACe,eAAe,GAAG,SAAU,CAAE;IAAA;IACvEU,WAAW,EAAGH,CAAC,IAAKA,CAAC,CAACC,aAAa,CAACvB,KAAK,CAAC0B,SAAS,GAAG,aAAc,CAAE;IAAA;IACtEC,SAAS,EAAGL,CAAC,IAAKA,CAAC,CAACC,aAAa,CAACvB,KAAK,CAAC0B,SAAS,GAAG,UAAW,CAAE;IAAA;IAAAE,QAAA,eAEjErB,OAAA;MAAMP,KAAK,EAAE;QAAE6B,KAAK,EAAE,MAAM;QAAEC,QAAQ,EAAE,MAAM;QAAEC,UAAU,EAAE;MAAM,CAAE;MAAAH,QAAA,EAAElC;IAAK;MAAAsC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChF,CAAC;AAGJ,CAAC;AAACC,EAAA,GApCS5C,aAAa;AAAA,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}