{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vrushabh\\\\OneDrive\\\\Documents\\\\GitHub\\\\vectorshift-technical-assesment\\\\frontend\\\\src\\\\submit.js\",\n  _s = $RefreshSig$();\n// submit.js\nimport { useNodeEdgeCounts } from './nodeEdgeCounts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SubmitButton = () => {\n  _s();\n  const {\n    nodeCount,\n    edgeCount,\n    isDAG\n  } = useNodeEdgeCounts();\n  const handleClick = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:8000/pipelines/parse', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          nodes: nodeCount,\n          edges: edgeCount,\n          isDAG: isDAG\n        }) // Sending the counts as the request body\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const result = await response.json();\n      alert(`Response from backend: Number of nodes: ${result.num_nodes}, Number of edges: ${result.num_edges}`);\n    } catch (error) {\n      console.error('Error submitting data:', error);\n      alert('Error submitting data. Check the console for details.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"text-white bg-blue-700 hover:bg-blue-800 focus:outline-none focus:ring-4 focus:ring-blue-300 font-medium rounded-full text-sm px-5 py-2.5 text-center me-2 mb-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\",\n      type: \"submit\",\n      onClick: handleClick,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(SubmitButton, \"+qRHc78i33XYncQj3LpyBqk60Ck=\", false, function () {\n  return [useNodeEdgeCounts];\n});\n_c = SubmitButton;\nvar _c;\n$RefreshReg$(_c, \"SubmitButton\");","map":{"version":3,"names":["useNodeEdgeCounts","jsxDEV","_jsxDEV","SubmitButton","_s","nodeCount","edgeCount","isDAG","handleClick","response","fetch","method","headers","body","JSON","stringify","nodes","edges","ok","Error","result","json","alert","num_nodes","num_edges","error","console","style","display","alignItems","justifyContent","children","className","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Vrushabh/OneDrive/Documents/GitHub/vectorshift-technical-assesment/frontend/src/submit.js"],"sourcesContent":["// submit.js\r\nimport { useNodeEdgeCounts } from './nodeEdgeCounts';\r\n\r\nexport const SubmitButton = () => {\r\n    const { nodeCount, edgeCount, isDAG } = useNodeEdgeCounts();\r\n\r\n    const handleClick = async () => {\r\n        try {\r\n          const response = await fetch('http://127.0.0.1:8000/pipelines/parse', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ nodes: nodeCount, edges: edgeCount, isDAG: isDAG }), // Sending the counts as the request body\r\n          });\r\n    \r\n          if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n          }\r\n    \r\n          const result = await response.json();\r\n          alert(`Response from backend: Number of nodes: ${result.num_nodes}, Number of edges: ${result.num_edges}`);\r\n        } catch (error) {\r\n          console.error('Error submitting data:', error);\r\n          alert('Error submitting data. Check the console for details.');\r\n        }\r\n      };\r\n\r\n    return (\r\n        <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\r\n            <button className='text-white bg-blue-700 hover:bg-blue-800 focus:outline-none focus:ring-4 focus:ring-blue-300 font-medium rounded-full text-sm px-5 py-2.5 text-center me-2 mb-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800' type=\"submit\" onClick={handleClick}>Submit</button>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA;AACA,SAASA,iBAAiB,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM;IAAEC,SAAS;IAAEC,SAAS;IAAEC;EAAM,CAAC,GAAGP,iBAAiB,CAAC,CAAC;EAE3D,MAAMQ,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;QACpEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,KAAK,EAAEX,SAAS;UAAEY,KAAK,EAAEX,SAAS;UAAEC,KAAK,EAAEA;QAAM,CAAC,CAAC,CAAE;MAC9E,CAAC,CAAC;;MAEF,IAAI,CAACE,QAAQ,CAACS,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MAEA,MAAMC,MAAM,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;MACpCC,KAAK,CAAE,2CAA0CF,MAAM,CAACG,SAAU,sBAAqBH,MAAM,CAACI,SAAU,EAAC,CAAC;IAC5G,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CH,KAAK,CAAC,uDAAuD,CAAC;IAChE;EACF,CAAC;EAEH,oBACIpB,OAAA;IAAKyB,KAAK,EAAE;MAACC,OAAO,EAAE,MAAM;MAAEC,UAAU,EAAE,QAAQ;MAAEC,cAAc,EAAE;IAAQ,CAAE;IAAAC,QAAA,eAC1E7B,OAAA;MAAQ8B,SAAS,EAAC,kOAAkO;MAACC,IAAI,EAAC,QAAQ;MAACC,OAAO,EAAE1B,WAAY;MAAAuB,QAAA,EAAC;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvS,CAAC;AAEd,CAAC;AAAAlC,EAAA,CA9BYD,YAAY;EAAA,QACmBH,iBAAiB;AAAA;AAAAuC,EAAA,GADhDpC,YAAY;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}