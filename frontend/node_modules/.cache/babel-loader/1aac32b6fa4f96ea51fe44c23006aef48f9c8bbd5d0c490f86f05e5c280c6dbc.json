{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vrushabh\\\\OneDrive\\\\Documents\\\\GitHub\\\\vectorshift-technical-assesment\\\\frontend\\\\src\\\\submit.js\",\n  _s = $RefreshSig$();\n// submit.js\nimport { useNodeEdgeCounts } from './nodeEdgeCounts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SubmitButton = () => {\n  _s();\n  const {\n    nodeCount,\n    edgeCount,\n    nodes,\n    edges\n  } = useNodeEdgeCounts();\n  const handleClick = async () => {\n    try {\n      const payload = {\n        nodes: nodes.map(node => ({\n          id: node.id,\n          type: node.type,\n          position: node.position,\n          data: node.data\n        })),\n        edges: edges.map(edge => ({\n          id: edge.id,\n          source: edge.source,\n          target: edge.target,\n          sourceHandle: edge.sourceHandle,\n          targetHandle: edge.targetHandle,\n          type: edge.type\n        }))\n      };\n      const response = await fetch('http://127.0.0.1:8000/pipelines/parse', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload) // Sending the nodes and edges as the request body\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const result = await response.json();\n      alert(`Response from backend: Number of nodes: ${result.num_nodes}, Number of edges: ${result.num_edges}, Is DAG: ${result.is_dag}`);\n    } catch (error) {\n      console.error('Error submitting data:', error);\n      alert('Error submitting data. Check the console for details.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: handleClick,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(SubmitButton, \"mP65XH1HtFMKfNao4x5Qxt9q4QY=\", false, function () {\n  return [useNodeEdgeCounts];\n});\n_c = SubmitButton;\nvar _c;\n$RefreshReg$(_c, \"SubmitButton\");","map":{"version":3,"names":["useNodeEdgeCounts","jsxDEV","_jsxDEV","SubmitButton","_s","nodeCount","edgeCount","nodes","edges","handleClick","payload","map","node","id","type","position","data","edge","source","target","sourceHandle","targetHandle","response","fetch","method","headers","body","JSON","stringify","ok","Error","result","json","alert","num_nodes","num_edges","is_dag","error","console","style","display","alignItems","justifyContent","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Vrushabh/OneDrive/Documents/GitHub/vectorshift-technical-assesment/frontend/src/submit.js"],"sourcesContent":["// submit.js\r\nimport { useNodeEdgeCounts } from './nodeEdgeCounts';\r\n\r\nexport const SubmitButton = () => {\r\n    const { nodeCount, edgeCount, nodes, edges } = useNodeEdgeCounts();\r\n\r\n    const handleClick = async () => {\r\n        try {\r\n          const payload = {\r\n            nodes: nodes.map((node) => ({\r\n              id: node.id,\r\n              type: node.type,\r\n              position: node.position,\r\n              data: node.data,\r\n            })),\r\n            edges: edges.map((edge) => ({\r\n              id: edge.id,\r\n              source: edge.source,\r\n              target: edge.target,\r\n              sourceHandle: edge.sourceHandle,\r\n              targetHandle: edge.targetHandle,\r\n              type: edge.type,\r\n            })),\r\n          };\r\n\r\n          const response = await fetch('http://127.0.0.1:8000/pipelines/parse', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(payload), // Sending the nodes and edges as the request body\r\n          });\r\n    \r\n          if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n          }\r\n    \r\n          const result = await response.json();\r\n          alert(`Response from backend: Number of nodes: ${result.num_nodes}, Number of edges: ${result.num_edges}, Is DAG: ${result.is_dag}`);\r\n        } catch (error) {\r\n          console.error('Error submitting data:', error);\r\n          alert('Error submitting data. Check the console for details.');\r\n        }\r\n      };\r\n\r\n    return (\r\n        <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\r\n            <button type=\"submit\" onClick={handleClick}>Submit</button>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA;AACA,SAASA,iBAAiB,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM;IAAEC,SAAS;IAAEC,SAAS;IAAEC,KAAK;IAAEC;EAAM,CAAC,GAAGR,iBAAiB,CAAC,CAAC;EAElE,MAAMS,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,OAAO,GAAG;QACdH,KAAK,EAAEA,KAAK,CAACI,GAAG,CAAEC,IAAI,KAAM;UAC1BC,EAAE,EAAED,IAAI,CAACC,EAAE;UACXC,IAAI,EAAEF,IAAI,CAACE,IAAI;UACfC,QAAQ,EAAEH,IAAI,CAACG,QAAQ;UACvBC,IAAI,EAAEJ,IAAI,CAACI;QACb,CAAC,CAAC,CAAC;QACHR,KAAK,EAAEA,KAAK,CAACG,GAAG,CAAEM,IAAI,KAAM;UAC1BJ,EAAE,EAAEI,IAAI,CAACJ,EAAE;UACXK,MAAM,EAAED,IAAI,CAACC,MAAM;UACnBC,MAAM,EAAEF,IAAI,CAACE,MAAM;UACnBC,YAAY,EAAEH,IAAI,CAACG,YAAY;UAC/BC,YAAY,EAAEJ,IAAI,CAACI,YAAY;UAC/BP,IAAI,EAAEG,IAAI,CAACH;QACb,CAAC,CAAC;MACJ,CAAC;MAED,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;QACpEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAClB,OAAO,CAAC,CAAE;MACjC,CAAC,CAAC;;MAEF,IAAI,CAACY,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MAEA,MAAMC,MAAM,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MACpCC,KAAK,CAAE,2CAA0CF,MAAM,CAACG,SAAU,sBAAqBH,MAAM,CAACI,SAAU,aAAYJ,MAAM,CAACK,MAAO,EAAC,CAAC;IACtI,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CJ,KAAK,CAAC,uDAAuD,CAAC;IAChE;EACF,CAAC;EAEH,oBACI/B,OAAA;IAAKqC,KAAK,EAAE;MAACC,OAAO,EAAE,MAAM;MAAEC,UAAU,EAAE,QAAQ;MAAEC,cAAc,EAAE;IAAQ,CAAE;IAAAC,QAAA,eAC1EzC,OAAA;MAAQY,IAAI,EAAC,QAAQ;MAAC8B,OAAO,EAAEnC,WAAY;MAAAkC,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEd,CAAC;AAAA5C,EAAA,CA/CYD,YAAY;EAAA,QAC0BH,iBAAiB;AAAA;AAAAiD,EAAA,GADvD9C,YAAY;AAAA,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}